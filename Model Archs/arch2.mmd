flowchart TD
    %% User Input
    START([User Searches Medicine]) --> AUTH[Authentication & Validation]
    
    %% Data Sources
    MEDICINE_DB[(Medicine Database<br/>MongoDB<br/>Compositions & Effects)]
    PHARMACY_DB[(Pharmacy Database<br/>PostgreSQL + PostGIS<br/>Locations & Inventory)]
    
    %% Model 1: Medicine Alternative Finder
    AUTH --> MODEL1[Model 1: Medicine Alternative Finder<br/>Technology: Python + FastAPI<br/>ML: TensorFlow + NLP<br/>Function: Find similar medicines]
    
    MODEL1 --> NLP[NLP Processing<br/>spaCy + NLTK<br/>Extract medicine components]
    
    NLP --> SIMILARITY[Similarity Analysis<br/>Word2Vec + BERT<br/>Find alternatives with same effect]
    
    MEDICINE_DB --> MODEL1
    SIMILARITY --> ALT_MEDICINES[Alternative Medicines List<br/>Same composition OR<br/>Different formula, same effect]
    
    %% Model 2: Pharmacy Finder
    ALT_MEDICINES --> MODEL2[Model 2: Pharmacy Finder<br/>Technology: Python + FastAPI<br/>ML: Geospatial Analysis<br/>Function: Find nearby pharmacies]
    
    MODEL2 --> LOCATION[Get User Location<br/>Google Maps API<br/>GPS coordinates]
    
    LOCATION --> GEOSEARCH[Geospatial Search<br/>PostGIS queries<br/>Find nearby pharmacies]
    
    PHARMACY_DB --> MODEL2
    GEOSEARCH --> STOCK_CHECK[Stock Verification<br/>Real-time inventory check<br/>Pharmacy APIs: 1mg, Apollo, NetMeds]
    
    STOCK_CHECK --> PHARMACY_LIST[Available Pharmacies List<br/>Distance + Stock + Price]
    
    %% Model 3: Route Optimizer
    PHARMACY_LIST --> MODEL3[Model 3: Route Optimizer<br/>Technology: Python + FastAPI<br/>Algorithm: Dijkstra + A*<br/>Function: Find shortest path]
    
    MODEL3 --> ROUTE_CALC[Route Calculation<br/>Google Directions API<br/>Real-time traffic data]
    
    ROUTE_CALC --> DISTANCE_TIME[Calculate Distance & Time<br/>Multiple route options<br/>Traffic-aware routing]
    
    %% Decision Logic
    DISTANCE_TIME --> DECISION{Multiple pharmacies with<br/>same distance/time?}
    
    DECISION -->|Yes| MULTI_CRITERIA[Multi-Criteria Ranking<br/>Weighted scoring:<br/>- Price: 30%<br/>- Distance: 25%<br/>- Stock availability: 25%<br/>- User rating: 20%]
    
    DECISION -->|No| SINGLE_RESULT[Single Best Option<br/>Shortest distance/time]
    
    %% Final Output
    MULTI_CRITERIA --> FINAL_RESULT[Final Results<br/>Ranked pharmacy list<br/>Medicine details + prices]
    SINGLE_RESULT --> FINAL_RESULT
    
    FINAL_RESULT --> UI_RESPONSE[User Interface Response<br/>React.js frontend<br/>Interactive map + results]
    
    UI_RESPONSE --> OUTPUT([Display Results:<br/>- Pharmacy name & address<br/>- Medicine name & price<br/>- Distance & estimated time<br/>- Stock availability<br/>- User ratings])
    
    %% External Services
    MAPS_API[Google Maps Platform<br/>- Geocoding API<br/>- Directions API<br/>- Distance Matrix API]
    PHARMACY_APIS[Pharmacy Partner APIs<br/>- Tata 1mg API<br/>- Apollo Pharmacy API<br/>- NetMeds API<br/>- PharmEasy API]
    
    MODEL2 <--> MAPS_API
    MODEL3 <--> MAPS_API
    STOCK_CHECK <--> PHARMACY_APIS
    
    %% Infrastructure
    CACHE[(Redis Cache<br/>Session management<br/>API response caching)]
    MONITOR[Monitoring & Logging<br/>Prometheus + Grafana<br/>ElasticSearch + Kibana]
    
    AUTH <--> CACHE
    UI_RESPONSE <--> CACHE
    
    MODEL1 -.-> MONITOR
    MODEL2 -.-> MONITOR
    MODEL3 -.-> MONITOR
    
        %% Color Legend
    subgraph LEGEND ["Legend"]
        direction TB
        L1([Start/End])
        L2[(Database)]
        L3[ML Model]
        L4[Process]
        L5{Decision}
        L6[External API]
        L7[Monitoring]
        L8[Result]
    end

    %% Enhanced Styling with Better Visibility
    classDef startEnd fill:#4CAF50,stroke:#2E7D32,stroke-width:3px,color:#ffffff,font-weight:bold
    classDef database fill:#9C27B0,stroke:#6A1B9A,stroke-width:2px,color:#ffffff,font-weight:bold
    classDef model fill:#F44336,stroke:#C62828,stroke-width:3px,color:#ffffff,font-weight:bold
    classDef processing fill:#2196F3,stroke:#1565C0,stroke-width:2px,color:#ffffff,font-weight:bold
    classDef decision fill:#FF9800,stroke:#E65100,stroke-width:4px,color:#000000,font-weight:bold
    classDef external fill:#E91E63,stroke:#AD1457,stroke-width:2px,color:#ffffff,font-weight:bold
    classDef Monitoring fill:#607D8B,stroke:#37474F,stroke-width:2px,color:#ffffff,font-weight:bold
    classDef result fill:#8BC34A,stroke:#558B2F,stroke-width:3px,color:#000000,font-weight:bold
    
    class START,OUTPUT startEnd
    class MEDICINE_DB,PHARMACY_DB,CACHE database
    class MODEL1,MODEL2,MODEL3 model
    class AUTH,NLP,SIMILARITY,LOCATION,GEOSEARCH,STOCK_CHECK,ROUTE_CALC,DISTANCE_TIME,UI_RESPONSE processing
    class DECISION decision
    class MAPS_API,PHARMACY_APIS external
    class MONITOR Monitoring
    class ALT_MEDICINES,PHARMACY_LIST,MULTI_CRITERIA,SINGLE_RESULT,FINAL_RESULT result

    class L1 startEnd
    class L2 database
    class L3 model
    class L4 processing
    class L5 decision
    class L6 external
    class L7 Monitoring
    class L8 result
    class LEGEND legend